/**
 * This class is generated by jOOQ
 */
package cn.emac.demo.petstore.domain.jpetstore.tables;


import cn.emac.demo.petstore.domain.jpetstore.Jpetstore;
import cn.emac.demo.petstore.domain.jpetstore.Keys;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.OrderstatusRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Status de pedidos
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Orderstatus extends TableImpl<OrderstatusRecord> {

	private static final long serialVersionUID = 882815398;

	/**
	 * The reference instance of <code>jpetstore.orderstatus</code>
	 */
	public static final Orderstatus ORDERSTATUS = new Orderstatus();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OrderstatusRecord> getRecordType() {
		return OrderstatusRecord.class;
	}

	/**
	 * The column <code>jpetstore.orderstatus.orderid</code>.
	 */
	public final TableField<OrderstatusRecord, Integer> ORDERID = createField("orderid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>jpetstore.orderstatus.linenum</code>.
	 */
	public final TableField<OrderstatusRecord, Integer> LINENUM = createField("linenum", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>jpetstore.orderstatus.timestamp</code>.
	 */
	public final TableField<OrderstatusRecord, Date> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>jpetstore.orderstatus.status</code>.
	 */
	public final TableField<OrderstatusRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "");

	/**
	 * Create a <code>jpetstore.orderstatus</code> table reference
	 */
	public Orderstatus() {
		this("orderstatus", null);
	}

	/**
	 * Create an aliased <code>jpetstore.orderstatus</code> table reference
	 */
	public Orderstatus(String alias) {
		this(alias, ORDERSTATUS);
	}

	private Orderstatus(String alias, Table<OrderstatusRecord> aliased) {
		this(alias, aliased, null);
	}

	private Orderstatus(String alias, Table<OrderstatusRecord> aliased, Field<?>[] parameters) {
		super(alias, Jpetstore.JPETSTORE, aliased, parameters, "Status de pedidos");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OrderstatusRecord> getPrimaryKey() {
		return Keys.KEY_ORDERSTATUS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OrderstatusRecord>> getKeys() {
		return Arrays.<UniqueKey<OrderstatusRecord>>asList(Keys.KEY_ORDERSTATUS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Orderstatus as(String alias) {
		return new Orderstatus(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Orderstatus rename(String name) {
		return new Orderstatus(name, null);
	}
}
