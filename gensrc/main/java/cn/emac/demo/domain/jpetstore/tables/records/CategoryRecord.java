/**
 * This class is generated by jOOQ
 */
package cn.emac.demo.domain.jpetstore.tables.records;


import cn.emac.demo.domain.jpetstore.tables.Category;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Categorias
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryRecord extends UpdatableRecordImpl<CategoryRecord> implements Record3<String, String, String> {

	private static final long serialVersionUID = -845724270;

	/**
	 * Setter for <code>jpetstore.category.catid</code>.
	 */
	public void setCatid(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>jpetstore.category.catid</code>.
	 */
	public String getCatid() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>jpetstore.category.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>jpetstore.category.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>jpetstore.category.descn</code>.
	 */
	public void setDescn(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>jpetstore.category.descn</code>.
	 */
	public String getDescn() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Category.CATEGORY.CATID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Category.CATEGORY.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Category.CATEGORY.DESCN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getCatid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDescn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CategoryRecord value1(String value) {
		setCatid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CategoryRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CategoryRecord value3(String value) {
		setDescn(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CategoryRecord values(String value1, String value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CategoryRecord
	 */
	public CategoryRecord() {
		super(Category.CATEGORY);
	}

	/**
	 * Create a detached, initialised CategoryRecord
	 */
	public CategoryRecord(String catid, String name, String descn) {
		super(Category.CATEGORY);

		setValue(0, catid);
		setValue(1, name);
		setValue(2, descn);
	}
}
