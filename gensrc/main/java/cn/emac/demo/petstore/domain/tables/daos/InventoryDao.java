/*
 * This file is generated by jOOQ.
*/
package cn.emac.demo.petstore.domain.tables.daos;


import cn.emac.demo.petstore.domain.tables.Inventory;
import cn.emac.demo.petstore.domain.tables.records.InventoryRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * Inventory
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class InventoryDao extends DAOImpl<InventoryRecord, cn.emac.demo.petstore.domain.tables.pojos.Inventory, String> {

    /**
     * Create a new InventoryDao without any configuration
     */
    public InventoryDao() {
        super(Inventory.INVENTORY, cn.emac.demo.petstore.domain.tables.pojos.Inventory.class);
    }

    /**
     * Create a new InventoryDao with an attached configuration
     */
    @Autowired
    public InventoryDao(Configuration configuration) {
        super(Inventory.INVENTORY, cn.emac.demo.petstore.domain.tables.pojos.Inventory.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.emac.demo.petstore.domain.tables.pojos.Inventory object) {
        return object.getItemid();
    }

    /**
     * Fetch records that have <code>itemid IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Inventory> fetchByItemid(String... values) {
        return fetch(Inventory.INVENTORY.ITEMID, values);
    }

    /**
     * Fetch a unique record that has <code>itemid = value</code>
     */
    public cn.emac.demo.petstore.domain.tables.pojos.Inventory fetchOneByItemid(String value) {
        return fetchOne(Inventory.INVENTORY.ITEMID, value);
    }

    /**
     * Fetch records that have <code>qty IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Inventory> fetchByQty(Integer... values) {
        return fetch(Inventory.INVENTORY.QTY, values);
    }
}
