/**
 * This class is generated by jOOQ
 */
package cn.emac.demo.petstore.domain.tables.daos;


import cn.emac.demo.petstore.domain.tables.Supplier;
import cn.emac.demo.petstore.domain.tables.records.SupplierRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.annotation.Generated;
import java.util.List;


/**
 * Cadastro de Fornecedores
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SupplierDao extends DAOImpl<SupplierRecord, cn.emac.demo.petstore.domain.tables.pojos.Supplier, Integer> {

	/**
	 * Create a new SupplierDao without any configuration
	 */
	public SupplierDao() {
		super(Supplier.SUPPLIER, cn.emac.demo.petstore.domain.tables.pojos.Supplier.class);
	}

	/**
	 * Create a new SupplierDao with an attached configuration
	 */
	@Autowired
	public SupplierDao(Configuration configuration) {
		super(Supplier.SUPPLIER, cn.emac.demo.petstore.domain.tables.pojos.Supplier.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(cn.emac.demo.petstore.domain.tables.pojos.Supplier object) {
		return object.getSuppid();
	}

	/**
	 * Fetch records that have <code>suppid IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Supplier> fetchBySuppid(Integer... values) {
		return fetch(Supplier.SUPPLIER.SUPPID, values);
	}

	/**
	 * Fetch a unique record that has <code>suppid = value</code>
	 */
	public cn.emac.demo.petstore.domain.tables.pojos.Supplier fetchOneBySuppid(Integer value) {
		return fetchOne(Supplier.SUPPLIER.SUPPID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Supplier> fetchByName(String... values) {
		return fetch(Supplier.SUPPLIER.NAME, values);
	}

	/**
	 * Fetch records that have <code>status IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Supplier> fetchByStatus(String... values) {
		return fetch(Supplier.SUPPLIER.STATUS, values);
	}

	/**
	 * Fetch records that have <code>addr1 IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Supplier> fetchByAddr1(String... values) {
		return fetch(Supplier.SUPPLIER.ADDR1, values);
	}

	/**
	 * Fetch records that have <code>addr2 IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Supplier> fetchByAddr2(String... values) {
		return fetch(Supplier.SUPPLIER.ADDR2, values);
	}

	/**
	 * Fetch records that have <code>city IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Supplier> fetchByCity(String... values) {
		return fetch(Supplier.SUPPLIER.CITY, values);
	}

	/**
	 * Fetch records that have <code>state IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Supplier> fetchByState(String... values) {
		return fetch(Supplier.SUPPLIER.STATE, values);
	}

	/**
	 * Fetch records that have <code>zip IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Supplier> fetchByZip(String... values) {
		return fetch(Supplier.SUPPLIER.ZIP, values);
	}

	/**
	 * Fetch records that have <code>phone IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Supplier> fetchByPhone(String... values) {
		return fetch(Supplier.SUPPLIER.PHONE, values);
	}
}
