/*
 * This file is generated by jOOQ.
*/
package cn.emac.demo.petstore.domain.tables.daos;


import cn.emac.demo.petstore.domain.tables.Signon;
import cn.emac.demo.petstore.domain.tables.records.SignonRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * Cadastro de usu√°rios
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SignonDao extends DAOImpl<SignonRecord, cn.emac.demo.petstore.domain.tables.pojos.Signon, String> {

    /**
     * Create a new SignonDao without any configuration
     */
    public SignonDao() {
        super(Signon.SIGNON, cn.emac.demo.petstore.domain.tables.pojos.Signon.class);
    }

    /**
     * Create a new SignonDao with an attached configuration
     */
    @Autowired
    public SignonDao(Configuration configuration) {
        super(Signon.SIGNON, cn.emac.demo.petstore.domain.tables.pojos.Signon.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.emac.demo.petstore.domain.tables.pojos.Signon object) {
        return object.getUsername();
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Signon> fetchByUsername(String... values) {
        return fetch(Signon.SIGNON.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public cn.emac.demo.petstore.domain.tables.pojos.Signon fetchOneByUsername(String value) {
        return fetchOne(Signon.SIGNON.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Signon> fetchByPassword(String... values) {
        return fetch(Signon.SIGNON.PASSWORD, values);
    }
}
