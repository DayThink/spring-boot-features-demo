/**
 * This class is generated by jOOQ
 */
package cn.emac.demo.petstore.domain.tables.daos;


import cn.emac.demo.petstore.domain.tables.Bannerdata;
import cn.emac.demo.petstore.domain.tables.records.BannerdataRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.annotation.Generated;
import java.util.List;


/**
 * Banner Data
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class BannerdataDao extends DAOImpl<BannerdataRecord, cn.emac.demo.petstore.domain.tables.pojos.Bannerdata, String> {

	/**
	 * Create a new BannerdataDao without any configuration
	 */
	public BannerdataDao() {
		super(Bannerdata.BANNERDATA, cn.emac.demo.petstore.domain.tables.pojos.Bannerdata.class);
	}

	/**
	 * Create a new BannerdataDao with an attached configuration
	 */
	@Autowired
	public BannerdataDao(Configuration configuration) {
		super(Bannerdata.BANNERDATA, cn.emac.demo.petstore.domain.tables.pojos.Bannerdata.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected String getId(cn.emac.demo.petstore.domain.tables.pojos.Bannerdata object) {
		return object.getFavcategory();
	}

	/**
	 * Fetch records that have <code>favcategory IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Bannerdata> fetchByFavcategory(String... values) {
		return fetch(Bannerdata.BANNERDATA.FAVCATEGORY, values);
	}

	/**
	 * Fetch a unique record that has <code>favcategory = value</code>
	 */
	public cn.emac.demo.petstore.domain.tables.pojos.Bannerdata fetchOneByFavcategory(String value) {
		return fetchOne(Bannerdata.BANNERDATA.FAVCATEGORY, value);
	}

	/**
	 * Fetch records that have <code>bannername IN (values)</code>
	 */
	public List<cn.emac.demo.petstore.domain.tables.pojos.Bannerdata> fetchByBannername(String... values) {
		return fetch(Bannerdata.BANNERDATA.BANNERNAME, values);
	}
}
