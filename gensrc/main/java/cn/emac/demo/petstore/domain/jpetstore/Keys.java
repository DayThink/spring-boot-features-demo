/**
 * This class is generated by jOOQ
 */
package cn.emac.demo.petstore.domain.jpetstore;


import cn.emac.demo.petstore.domain.jpetstore.tables.Account;
import cn.emac.demo.petstore.domain.jpetstore.tables.Bannerdata;
import cn.emac.demo.petstore.domain.jpetstore.tables.Category;
import cn.emac.demo.petstore.domain.jpetstore.tables.Inventory;
import cn.emac.demo.petstore.domain.jpetstore.tables.Item;
import cn.emac.demo.petstore.domain.jpetstore.tables.Lineitem;
import cn.emac.demo.petstore.domain.jpetstore.tables.Orders;
import cn.emac.demo.petstore.domain.jpetstore.tables.Orderstatus;
import cn.emac.demo.petstore.domain.jpetstore.tables.Product;
import cn.emac.demo.petstore.domain.jpetstore.tables.Profile;
import cn.emac.demo.petstore.domain.jpetstore.tables.Sequence;
import cn.emac.demo.petstore.domain.jpetstore.tables.Signon;
import cn.emac.demo.petstore.domain.jpetstore.tables.Supplier;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.AccountRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.BannerdataRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.CategoryRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.InventoryRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.ItemRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.LineitemRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.OrdersRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.OrderstatusRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.ProductRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.ProfileRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.SequenceRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.SignonRecord;
import cn.emac.demo.petstore.domain.jpetstore.tables.records.SupplierRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>jpetstore</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
	public static final UniqueKey<BannerdataRecord> KEY_BANNERDATA_PRIMARY = UniqueKeys0.KEY_BANNERDATA_PRIMARY;
	public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = UniqueKeys0.KEY_CATEGORY_PRIMARY;
	public static final UniqueKey<InventoryRecord> KEY_INVENTORY_PRIMARY = UniqueKeys0.KEY_INVENTORY_PRIMARY;
	public static final UniqueKey<ItemRecord> KEY_ITEM_PRIMARY = UniqueKeys0.KEY_ITEM_PRIMARY;
	public static final UniqueKey<LineitemRecord> KEY_LINEITEM_PRIMARY = UniqueKeys0.KEY_LINEITEM_PRIMARY;
	public static final UniqueKey<OrdersRecord> KEY_ORDERS_PRIMARY = UniqueKeys0.KEY_ORDERS_PRIMARY;
	public static final UniqueKey<OrderstatusRecord> KEY_ORDERSTATUS_PRIMARY = UniqueKeys0.KEY_ORDERSTATUS_PRIMARY;
	public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = UniqueKeys0.KEY_PRODUCT_PRIMARY;
	public static final UniqueKey<ProfileRecord> KEY_PROFILE_PRIMARY = UniqueKeys0.KEY_PROFILE_PRIMARY;
	public static final UniqueKey<SequenceRecord> KEY_SEQUENCE_PRIMARY = UniqueKeys0.KEY_SEQUENCE_PRIMARY;
	public static final UniqueKey<SignonRecord> KEY_SIGNON_PRIMARY = UniqueKeys0.KEY_SIGNON_PRIMARY;
	public static final UniqueKey<SupplierRecord> KEY_SUPPLIER_PRIMARY = UniqueKeys0.KEY_SUPPLIER_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<ItemRecord, ProductRecord> ITEM_IBFK_1 = ForeignKeys0.ITEM_IBFK_1;
	public static final ForeignKey<ItemRecord, SupplierRecord> ITEM_IBFK_2 = ForeignKeys0.ITEM_IBFK_2;
	public static final ForeignKey<ProductRecord, CategoryRecord> PRODUCT_IBFK_1 = ForeignKeys0.PRODUCT_IBFK_1;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(Account.ACCOUNT, Account.ACCOUNT.USERID);
		public static final UniqueKey<BannerdataRecord> KEY_BANNERDATA_PRIMARY = createUniqueKey(Bannerdata.BANNERDATA, Bannerdata.BANNERDATA.FAVCATEGORY);
		public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = createUniqueKey(Category.CATEGORY, Category.CATEGORY.CATID);
		public static final UniqueKey<InventoryRecord> KEY_INVENTORY_PRIMARY = createUniqueKey(Inventory.INVENTORY, Inventory.INVENTORY.ITEMID);
		public static final UniqueKey<ItemRecord> KEY_ITEM_PRIMARY = createUniqueKey(Item.ITEM, Item.ITEM.ITEMID);
		public static final UniqueKey<LineitemRecord> KEY_LINEITEM_PRIMARY = createUniqueKey(Lineitem.LINEITEM, Lineitem.LINEITEM.ORDERID, Lineitem.LINEITEM.LINENUM);
		public static final UniqueKey<OrdersRecord> KEY_ORDERS_PRIMARY = createUniqueKey(Orders.ORDERS, Orders.ORDERS.ORDERID);
		public static final UniqueKey<OrderstatusRecord> KEY_ORDERSTATUS_PRIMARY = createUniqueKey(Orderstatus.ORDERSTATUS, Orderstatus.ORDERSTATUS.ORDERID, Orderstatus.ORDERSTATUS.LINENUM);
		public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = createUniqueKey(Product.PRODUCT, Product.PRODUCT.PRODUCTID);
		public static final UniqueKey<ProfileRecord> KEY_PROFILE_PRIMARY = createUniqueKey(Profile.PROFILE, Profile.PROFILE.USERID);
		public static final UniqueKey<SequenceRecord> KEY_SEQUENCE_PRIMARY = createUniqueKey(Sequence.SEQUENCE, Sequence.SEQUENCE.NAME);
		public static final UniqueKey<SignonRecord> KEY_SIGNON_PRIMARY = createUniqueKey(Signon.SIGNON, Signon.SIGNON.USERNAME);
		public static final UniqueKey<SupplierRecord> KEY_SUPPLIER_PRIMARY = createUniqueKey(Supplier.SUPPLIER, Supplier.SUPPLIER.SUPPID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<ItemRecord, ProductRecord> ITEM_IBFK_1 = createForeignKey(Keys.KEY_PRODUCT_PRIMARY, Item.ITEM, Item.ITEM.PRODUCTID);
		public static final ForeignKey<ItemRecord, SupplierRecord> ITEM_IBFK_2 = createForeignKey(Keys.KEY_SUPPLIER_PRIMARY, Item.ITEM, Item.ITEM.SUPPLIER);
		public static final ForeignKey<ProductRecord, CategoryRecord> PRODUCT_IBFK_1 = createForeignKey(Keys.KEY_CATEGORY_PRIMARY, Product.PRODUCT, Product.PRODUCT.CATEGORY);
	}
}
